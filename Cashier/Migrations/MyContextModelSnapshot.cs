// <auto-generated />
using System;
using Cashier.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cashier.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cashier.Model.Account", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Roleid")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Roleid");

                    b.ToTable("tb_m_account");
                });

            modelBuilder.Entity("Cashier.Model.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("tb_m_category");
                });

            modelBuilder.Entity("Cashier.Model.DetailRequest", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Goodsid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RequestGoodsid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("quantity")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Goodsid");

                    b.HasIndex("RequestGoodsid");

                    b.ToTable("tb_t_detail_request_goods");
                });

            modelBuilder.Entity("Cashier.Model.DetailTransaction", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Goodsid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Transactionid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("quantity")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Goodsid");

                    b.HasIndex("Transactionid");

                    b.ToTable("tb_t_detail_transaction");
                });

            modelBuilder.Entity("Cashier.Model.Goods", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Categoryid")
                        .HasColumnType("int");

                    b.Property<string>("Supplierid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("priceBuy")
                        .HasColumnType("int");

                    b.Property<int>("priceSell")
                        .HasColumnType("int");

                    b.Property<int>("stok")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Categoryid");

                    b.HasIndex("Supplierid");

                    b.ToTable("tb_t_goods");
                });

            modelBuilder.Entity("Cashier.Model.RequestGoods", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Supplierid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Userid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("date_trs")
                        .HasColumnType("datetime2");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("total")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Supplierid");

                    b.HasIndex("Userid");

                    b.ToTable("tb_t_request_goods");
                });

            modelBuilder.Entity("Cashier.Model.Role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("tb_m_role");
                });

            modelBuilder.Entity("Cashier.Model.Supplier", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("companyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("tb_m_supplier");
                });

            modelBuilder.Entity("Cashier.Model.Transaction", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Userid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("date_trs")
                        .HasColumnType("datetime2");

                    b.Property<string>("payment_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("total")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Userid");

                    b.ToTable("tb_t_transaction");
                });

            modelBuilder.Entity("Cashier.Model.User", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("tb_m_user");
                });

            modelBuilder.Entity("Cashier.Model.Account", b =>
                {
                    b.HasOne("Cashier.Model.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("Roleid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cashier.Model.User", "User")
                        .WithOne("Account")
                        .HasForeignKey("Cashier.Model.Account", "id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cashier.Model.DetailRequest", b =>
                {
                    b.HasOne("Cashier.Model.Goods", "Goods")
                        .WithMany("DetailRequests")
                        .HasForeignKey("Goodsid");

                    b.HasOne("Cashier.Model.RequestGoods", "RequestGoods")
                        .WithMany("DetailRequests")
                        .HasForeignKey("RequestGoodsid");

                    b.Navigation("Goods");

                    b.Navigation("RequestGoods");
                });

            modelBuilder.Entity("Cashier.Model.DetailTransaction", b =>
                {
                    b.HasOne("Cashier.Model.Goods", "Goods")
                        .WithMany("DetailTransactions")
                        .HasForeignKey("Goodsid");

                    b.HasOne("Cashier.Model.Transaction", "Transaction")
                        .WithMany("DetailTransactions")
                        .HasForeignKey("Transactionid");

                    b.Navigation("Goods");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("Cashier.Model.Goods", b =>
                {
                    b.HasOne("Cashier.Model.Category", "Category")
                        .WithMany("Goods")
                        .HasForeignKey("Categoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cashier.Model.Supplier", "Supplier")
                        .WithMany("Goods")
                        .HasForeignKey("Supplierid");

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Cashier.Model.RequestGoods", b =>
                {
                    b.HasOne("Cashier.Model.Supplier", "Supplier")
                        .WithMany("RequestGoods")
                        .HasForeignKey("Supplierid");

                    b.HasOne("Cashier.Model.User", "User")
                        .WithMany("RequestGoods")
                        .HasForeignKey("Userid");

                    b.Navigation("Supplier");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cashier.Model.Transaction", b =>
                {
                    b.HasOne("Cashier.Model.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("Userid");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cashier.Model.Category", b =>
                {
                    b.Navigation("Goods");
                });

            modelBuilder.Entity("Cashier.Model.Goods", b =>
                {
                    b.Navigation("DetailRequests");

                    b.Navigation("DetailTransactions");
                });

            modelBuilder.Entity("Cashier.Model.RequestGoods", b =>
                {
                    b.Navigation("DetailRequests");
                });

            modelBuilder.Entity("Cashier.Model.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("Cashier.Model.Supplier", b =>
                {
                    b.Navigation("Goods");

                    b.Navigation("RequestGoods");
                });

            modelBuilder.Entity("Cashier.Model.Transaction", b =>
                {
                    b.Navigation("DetailTransactions");
                });

            modelBuilder.Entity("Cashier.Model.User", b =>
                {
                    b.Navigation("Account");

                    b.Navigation("RequestGoods");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
